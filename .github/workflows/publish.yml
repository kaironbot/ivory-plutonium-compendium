name: Release management

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'

jobs:
  if_merged:
    name: Create a new release of the Compendium
    if: github.event.pull_request.merged == true && (contains(github.event.pull_request.labels.*.name, 'major') || contains(github.event.pull_request.labels.*.name, 'minor') || contains(github.event.pull_request.labels.*.name, 'patch'))
    runs-on: ubuntu-latest
    outputs:
      base-version: ${{ steps.version.outputs.VERSION }}
      new-version: ${{ steps.version.outputs.NEW_VERSION }} 
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract version from module.json
        id: version
        run: echo "VERSION=$(cat version.ver)">> $GITHUB_OUTPUT 

      - name: Creation new version (Major) 🏷️
        if: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
        id: bump_version_major
        uses: christian-draeger/increment-semantic-version@1.0.3
        with:
          current-version: ${{ steps.version.outputs.VERSION }}
          version-fragment: 'major'

      - name: Update major version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
        run: echo ${{ steps.bump_version_major.outputs.next-version }} >> version.ver

      - name: Creation new version (Minor) 🏷️
        if: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
        id: bump_version_minor
        uses: christian-draeger/increment-semantic-version@1.0.3
        with:
          current-version: ${{ steps.version.outputs.VERSION }}
          version-fragment: 'feature'

      - name: Update minor version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
        run: echo ${{ steps.bump_version_minor.outputs.next-version }} >> version.ver

      - name: Creation new version (Patch) 🏷️
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
        id: bump_version_patch
        uses: christian-draeger/increment-semantic-version@1.0.3
        with:
          current-version: ${{ steps.version.outputs.VERSION }}
          version-fragment: 'bug'

      - name: Update patch version
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
        run: echo  ${{ steps.bump_version_patch.outputs.next-version }} >> version.ver

      - name: Extract new version
        id: new-version
        run: echo "NEW_VERSION=$(cat version.ver)" > $GITHUB_OUTPUT 

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          tagging_message: ${{ steps.version.outputs.NEW_VERSION }}
          commit_message: Updated version
          commit_user_name: Kaironbot
          commit_user_email: deb@kaironbot.it

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Creates Plutonium Compendium
        run: python main.py -v ${{ steps.version.outputs.NEW_VERSION }}

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ github.event.pull_request.body }}
          tag: ${{ steps.version.outputs.NEW_VERSION }}
          artifacts: plutonium/wagham_compendium.json
          token: ${{ secrets.GITHUB_TOKEN }}